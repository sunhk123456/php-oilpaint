<?php

namespace app\index\controller;

use think\Controller;
use think\Db;
use think\Request;

class Orders extends Controller
{
    public $model;
    public function __construct(Request $request = null)
    {
        parent::__construct($request);
    }
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->model = model('Orders');
    }

    /**
     * 显示资源列表
     *
     * @return \think\Response
     */
    public function index()
    {

        checkToken1();
        $uid=$this->request->uid;
        $where['uid']=$uid;
        $table='stayhome';
        $where1='sid';
        $arr=['','待支付','已完成','退款'];
        $result=$this->model->indexdata($table,$where,$where1);
//        var_dump($result['ostatus']);
//        $result['status_text']=$arr[$result['ostatus']];
        return json([
            'code'=>200,
            'msg'=>'成功',
            'data'=>$result
        ]);
        //
    }

    /**
     * 显示创建资源表单页.
     *
     * @return \think\Response
     */
    public function create()
    {
        //
    }

    /**
     * 保存新建的资源
     *得到数据
     * 修改stayhome里面的status的状态
     * 将数据添加到orders表单中
     * 
     * @param  \think\Request  $request
     * @return \think\Response
     */
    public function save(Request $request)
    {
        //
        checkToken1();
        $Stayhomemodel=model('Stayhome');
        $data=$this->request->post()['data'];
        $where['sid']=(int)$data['sid'];
//        $stayhomeostatus= $Stayhomemodel->find($where1);
//       if ($stayhomeostatus){
           $data['uid']=$this->request->uid;
           // 启动事务
           Db::startTrans();
           try{
               $data['ostatus']=1;
           $Orderresult= $this->model->add($data);
           $Stayhomeresult=$Stayhomemodel->edit(['status'=>0],$where);
           $oid= model('Orders')->oid;
//            提交事务
            Db::commit();
               return json([
                   'code'=>200,
                   'msg'=>'下单中',
                   'oid'=>$oid
               ]);

        } catch (\Exception $e) {
            // 回滚事务
            Db::rollback();
        return json([
            'code'=>400,
            'msg'=>'失败'
        ]);
        }
//       }else{
//           return json([
//               'code'=>400,
//               'msg'=>'房间以满'
//           ]);
//       }
    }

    /**
     * 显示指定的资源
     *
     * @param  int  $id
     * @return \think\Response
     */
    public function read($id)
    {
        //
    }

    /**
     * 显示编辑资源表单页.
     *
     * @param  int  $id
     * @return \think\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * 保存更新的资源
     *
     * @param  \think\Request  $request
     * @param  int  $id
     * @return \think\Response
     */
    public function update(Request $request, $id)
    {

        $where['oid']=$id;
        $data['status']=2;
        $result=$this->model->updata($where,$data);
        if ($result){
            return json([
                'code'=>200,
                'msg'=>'下单成功',

            ]);
        }else{
            return json([
                'code'=>400,
                'msg'=>'下单失败',

            ]);
        }
        //
    }

    /**
     * 删除指定资源
     *
     * @param  int  $id
     * @return \think\Response
     */
    public function delete($id)
    {
        //
    }
}
